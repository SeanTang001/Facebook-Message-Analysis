shiny::runApp()
runApp()
?fileInput
?uiOutput
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?modalDialog
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?titlePanel
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?mainPanel
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?renderTable
tableOutput()
?tableOutput()
runApp()
runApp()
runApp()
runApp()
runApp()
?shinyDirChoose
??shinyDirChoose
shiny::runApp()
shiny::runApp()
a <- "hello/bye"
library(stringr)
strsplit(a, "/")
strsplit(a, "/")[1:2]
strsplit(a, "/")[[1:2]]
strsplit(a, "/")[[1:1]]
strsplit(a, "/")[[1]]
strsplit(a, "/")[[0ï¼š1]]
strsplit(a, "/")[[0:1]]
strsplit(a, "/")[[1:1]]
strsplit(a, "/")[[1:2]]
strsplit(a, "/")[[2:1]]
strsplit(a, "/")[[2:3]]
strsplit(a, "/")[[2:2]]
strsplit(a, "/")[[1:2]]
a <- "a/b/c/d"
strsplit(a, "/")[[1:2]]
strsplit(a, "/")[[:2]]
strsplit(a, "/")[[]]
strsplit(a, "/")[[1]]
strsplit(a, "/")[[1]][1:2]
strsplit(a, "/")[[1]][1:length(a)]
strsplit(a, "/")[[1]][1:length(a)-1]
strsplit(a, "/")[[1]][1:(length(a)-1)]
strsplit(a, "/")[[1]][1:3]
strsplit(a, "/")[[1]][1:4]
strsplit(a, "/")[[1]][1:5]
strsplit(a, "/")[[1]][1:length(strsplit(a, "/"))]
strsplit(a, "/")[[1]][1:length(strsplit(a, "/"))]
strsplit(a, "/")[[1]][1:length(strsplit(a, "/")[[1]])]
strsplit(a, "/")[[1]][1:length(strsplit(a, "/")[[1]])-1]
strsplit(a, "/")[[1]][1:length(strsplit(a, "/")[[1]])-1] -> b
paste(b, "/")
paste(b, "/", sep="")
paste(b[1:3], "/", sep="")
paste(b[1:2], "/", sep="")
paste(b[1:2], "/", collapse="")
paste(b[1:2], "/", collapse="", sep="")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
data()$message
data()$message
data()$message[[1]]
n
Q
runApp()
data()$message[[1]]
data()$message
data()$message[[1]][[1]]
runApp()
runApp()
unlist(b)->c
c
runApp()
b
unlist(b)
unlist(b) -> cs
cs
df <- data.frame(matrix(unlist(b), nrow=length(l), byrow=TRUE))
df <- data.frame(matrix(unlist(b), nrow=length(l), byrow=TRUE))
Q
runApp()
df <- data.frame(matrix(unlist(b), nrow=length(b), byrow=TRUE))
df
runApp()
runApp()
runApp()
runApp()
?data.frame
runApp()
runApp()
runApp()
runApp()
runApp()
b
names(b)
names(b[[1]])
names(b[[2]])
names(b[[3]])
names(b[[4]])
runApp()
df <- data.frame(matrix(unlist(b), nrow=length(b), byrow=TRUE), col.names = names(b[[1]]))
names(b[[1]])
names(b[[2]])
names(b[[19]])
names(b[[10]])
df <- data.frame(matrix(unlist(b), nrow=length(b), byrow=TRUE), col.names = names(b[[1]]), check.names=TRUE)
df <- data.frame(matrix(unlist(b), nrow=length(b), byrow=TRUE), col.names = names(b[[1]]), fix.empty.names = TRUE)
df <- data.frame(matrix(unlist(b), nrow=length(b), byrow=TRUE), row.names = names(b[[1]]), fix.empty.names = TRUE)
df <- data.frame(matrix(unlist(b), nrow=length(b), byrow=TRUE), row.names = names(b[[1]]), fix.empty.names = TRUE)
df <- data.frame(matrix(unlist(b), nrow=length(b), byrow=TRUE), row.names = c("x1","x2","x3","x4"), fix.empty.names = TRUE)
df <- data.frame(matrix(unlist(b), nrow=length(b), byrow=TRUE), row.names = c("x1","x2","x3","x4","x5"), fix.empty.names = TRUE)
df <- data.frame(matrix(unlist(b), nrow=length(b), byrow=TRUE), row.names = c("x1","x2","x3"), fix.empty.names = TRUE)
matrix(unlist(b), nrow=length(b), byrow=TRUE)
b
names(b[[1]])
matrix(unlist(b), nrow=length(b), byrow=TRUE)
matrix(unlist(b), nrow=length(b), byrow=TRUE) -> a
df <- data.frame(a, row.names = c("x1","x2","x3"), fix.empty.names = TRUE)
df <- data.frame(a)
df
df <- data.frame(a, row.names(1,2,3,4,5))
df <- data.frame(a, row.names(c(1,2,3,4,5)))
df <- data.frame(a, row.names(c(1,2,3,4,5,4)))
df <- data.frame(a, row.names(c(1,2,3,4,5,4,5)))
df <- data.frame(a, row.names(c(1)))
df <- data.frame(a, row.names(c(1,2)))
df <- data.frame(a, row.names(c(1,2,3)))
colnames(a, do.NULL=TRUE, prefix = "col")
colnames(a) <- names(b[[1]])
a
df <- data.frame(a)
df
runApp()
runApp()
a
colnames(a) <- names(b[[1]])
a
runApp()
runApp()
runApp()
runApp()
runApp()
input$countSpecifiedWord
input$countSpecifiedWord[1]
input$countSpecifiedWord[[1]]
runApp()
runApp()
runApp()
runApp()
z
message_ops$WCKowalski(data()$message, message_ops$countSpecificWord, input$countSpecifiedWord, FALSE)
message_ops$WCKowalski(data()$message, message_ops$countSpecificWord, "hello", FALSE)
message_ops$WCKowalski(data()$message, message_ops$countSpecificWord(), "hello", FALSE)
message_ops$WCKowalski(data()$message[[1]], message_ops$countSpecificWord(), "hello", FALSE)
message_ops$WCKowalski(data()$message[[1]], message_ops$countSpecificWord, "hello", FALSE)
message_ops$WCKowalski(data()$message[[1]], message_ops$countSpecificWord, "hello", FALSE) -> z
z
unlist(z)
runApp()
runApp()
runApp()
runApp()
z
z
z
z$`Sean Tang`
typeof(z)
unlist(z)
matrix(unlist(z), nrow=1, ncol=2)
colnames(matrix(unlist(z), nrow=1, ncol=2))<-names(z)
colnames(matrix(unlist(z), nrow=1, ncol=2)) <- names(z)
matrix(unlist(z), nrow=1, ncol=2) -> a
colnames(a) <- names(z)
a
?matrix
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
?dataTableOutput
runApp()
?textOutput
runApp()
runApp('~/Desktop/pnnl/argus/inst/app')
runApp('~/Desktop/spring_break_shens/Facebook-Message-Analysis/webapp')
runApp()
a <- "hello,bye"
a
strsplit(a,"")
strsplit(a,",")
strsplit(a,",")
a<-"hellobye"
strsplit(a,",")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
a
Q
Q
Q
runApp()
b
b[[1]]
names(b)
names(b[[1]])
a
colnames(a) <- c("1","2","3")
colnames(a) <- c("1","2","3","4")
colnames(a) <- c("1","2","3","4","5")
colnames(a) <- c("1","2","3","4","5","6")
runApp()
runApp()
runApp()
runApp()
runApp()
a[,1]
colnames(a)
a[1]
a[2]
a[3]
a[4]
a[]
Q
runApp()
a[1]
a[1]
a[2]
a[3]
a[4]
a[5]
a[6]
a[]
a[6]
a[7]
a[8]
length(a)
b
matrix(b)
matrix(b[1])
b
b[[1]]
matrix(b[[1]])
library(plyr)
ldply(b, data.frame)->c
do.call(rbind, lapply(b, as.data.frame))
do.call(rbind, lapply(b, as.data.frame, check.rows = FALSE))
do.call(rbind, lapply(b, as.data.frame, check.columns = FALSE))
b
b[1]
b[2]
b[[2]
]
for (i in b){print(i)}
for (i in b){print(i)}
for (i in b){print(1)}
for (i in 1:length(b)){print(b[[i]])}
b[[1]]
b[[2]]
b[[100]]
b[[1162]]
View(b)
b[[574]]
b[[898]]
b[[1000]]
b[[1163]]
1163-17
b[[1145]]
b[[1146]]
for (a in 2){print(a)}
print(a)
runApp()
runApp()
runApp()
runApp()
runApp()
?is.na
is.Na
is.null
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
dl <- data.frame(ID = rep(names(b), sapply(b, length)),
Obs = unlist(b))
b
b
runApp()
b
b
as.data.frame.list(b)
as.data.frame.list(b) -> z
colnames(z) <- names(b[[1]])
z
View(z)
?map_df
map_df(b)
library(purr)
library(purrr)
map_df(b)
map_df(b, ~as.data.frame(b))
runApp()
b
b
dplyr
library(dplyr)
do.call(rbind, b)
do.call(rbind, b) -> a
do.call(rbind, b) -> z
for (i in 1:length(b)){
b[[i]]$reactions
b[[i]]$share <-
b[[i]]$photos <-
b[[i]]$sticker <-
if(is.null(b[[i]]$content)){
b[[i]]$content <- "off"
}
print(names(b[[i]]))
}
b
do.call(rbind, b) -> z
View(z)
for (i in b){print(i)}
list("a"=2)
runApp()
runApp()
